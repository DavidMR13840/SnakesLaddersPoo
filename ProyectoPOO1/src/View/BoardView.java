/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Container;
import java.awt.GridLayout;
import java.awt.event.MouseListener;
import javax.swing.JPanel;

/**
 *
 * @author David
 */
public class BoardView extends javax.swing.JFrame {

    /**
     * Creates new form BoardView
     */
    public BoardView() {
         c = getContentPane();

            setBounds(100, 100, 700, 700);

            setBackground(new Color(204, 204, 204));

            setDefaultCloseOperation(EXIT_ON_CLOSE);

            setTitle("Snakes and Ladders");

            setResizable(false);

            c.setLayout(null);     

            pnlMain.setBounds(3, 3, 700, 700);

            pnlMain.setBackground(new Color(255, 255, 255));

            c.add(pnlMain);
            
            drawChessBoard();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new BoardView().setVisible(true);
    }
private void drawChessBoard()

      {

            for (int y = 0; y < 8; y++)

                  for (int x = 0; x < 8; x++)

                  {

                        pnlChessCells[y][x] = new JPanel(new BorderLayout());

                        

                        pnlMain.add(pnlChessCells[y][x]);

                        if (y % 2 == 0)

                              if (x % 2 != 0)

                                    pnlChessCells[y][x].setBackground(Color.DARK_GRAY);

                              else

                                    pnlChessCells[y][x].setBackground(Color.WHITE);

                        else

                              if (x % 2 == 0)

                                    pnlChessCells[y][x].setBackground(Color.DARK_GRAY);

                              else

                                    pnlChessCells[y][x].setBackground(Color.WHITE);

                  }

      }
    Container c;
    private JPanel[][] pnlChessCells = new JPanel[10][10];

    private JPanel pnlMain = new JPanel(new GridLayout(10,10));

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
